Technology hierarchy
====================

Service		net.connman
Interface	net.connman.Technology
Object path	[variable prefix]/{technology0,technology1,...}

Methods		dict GetProperties()

			Returns properties for the technology object. See
			the properties section for available properties.

			Possible Errors: [service].Error.InvalidArguments

Signals		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

Properties	string State [readonly]

			The technology state information.

			Valid states are "offline", "enabled" and "connected".

		string Name [readonly]

			Name of this technology.

		string Type [readonly]

			The technology type (for example "ethernet" etc.)

			This information should only be used to determine
			advanced properties or showing the correct icon
			to the user.

		boolean Tethering [readwrite]

			This option allows to enable or disable the support
			for tethering. When tethering is enabled then the
			default service is bridged to all clients connected
			through the technology.

		string TetheringIdentifier [readwrite]

		       The tethering broadcasted identifier.

		       This property is only valid for the WiFi technology,
		       and is then mapped to the WiFi AP SSID clients will
		       have to join in order to gain internet connectivity.

		string TetheringPassphrase [readwrite]

		       The tethering connection passphrase.

		       This property is only valid for the WiFi technology,
		       and is then mapped to the WPA pre-shared key clients
		       will have to use in order to establish a connection.
